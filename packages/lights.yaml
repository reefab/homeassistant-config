group:
  main_rooms_lights:
    name: Main Lights
    entities:
      - light.salon
      - light.bureau

automation:
  # Those replaces the 'presence based light' component but have the advantage
  # of being able to be enabled/disabled on demand
  - alias: ðŸ’¡ Switch lights off if no one is home
    trigger:
      - platform: state
        entity_id: group.people
        to: 'not_home'
    action:
      - service: light.turn_off
        entity_id: all

  - alias: ðŸ’¡ Switch lights on if people are coming home
    trigger:
      - platform: state
        entity_id: group.people
        to: 'home'
    condition:
      - condition: state
        entity_id: binary_sensor.sun_up
        state: 'off'
    action:
      - service: light.turn_on
        entity_id: group.main_rooms_lights

  - alias: ðŸ’¡ Switch lights on if people are home at sunset
    trigger:
      - platform: state
        entity_id: binary_sensor.sun_up
        to: 'off'
    condition:
      - condition: state
        entity_id: group.people
        state: home
      - condition: state
        entity_id: media_player.ecran_salon
        state: 'off'
    action:
      - service: light.turn_on
        entity_id: group.main_rooms_lights

  - alias: ðŸ’¡ Switch lights on if it gets too dark during the day
    trigger:
      - platform: numeric_state
        entity_id: sensor.lightlevel_70
        below: 500
        for:
          minutes: 2
    condition:
      - condition: state
        entity_id: group.people
        state: home
      - condition: state
        entity_id: media_player.ecran_salon
        state: 'off'
      - condition: state
        entity_id: input_boolean.night_time
        state: 'off'
    action:
      - service: light.turn_on
        entity_id: group.main_rooms_lights

  - alias: ðŸ’¡ Switch lights off if it gets too bright during the day
    trigger:
      - platform: numeric_state
        entity_id: sensor.lightlevel_70
        above: 500
        for:
          minutes: 2
    condition:
      - condition: state
        entity_id: media_player.ecran_salon
        state: 'off'
    action:
      - service: light.turn_off
        entity_id: group.main_rooms_lights

  - alias: ðŸ’¡ Switch lights off after sunrise
    trigger:
      - platform: state
        entity_id: binary_sensor.sun_up
        to: 'on'
    action:
      - wait_template: "{{ is_state_attr('sensor.lightlevel_70', 'daylight', True) }}"
      - service: light.turn_off
        entity_id: group.main_rooms_lights

  - alias: ðŸ’¡ Switch all lights off on button press
    trigger:
      platform: event
      event_type: deconz_event
      event_data:
        id: bouton_lit
        event: 1004
    action:
      - service: light.turn_off
        entity_id: light.all_but_bedroom

  - alias: ðŸ’¡ Switch all lights but bedroom off on bedroom door closing
    trigger:
      - platform: state
        entity_id: binary_sensor.porte_chambre
        to: 'off'
    action:
      - service: light.turn_off
        entity_id: light.all_but_bedroom
      - service: light.turn_on
        entity_id: light.chambre

light:
  # Ikea light strips controlled using a sonoff iFan02
  - platform: mqtt
    name: Vitrine
    command_topic: "cmnd/office_fan/POWER1"
    state_topic: "stat/office_fan/POWER1"
    availability_topic: "tele/office_fan/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
    payload_on: "ON"
    payload_off: "OFF"

binary_sensor:
  - platform: template
    sensors:
      sun_up:
        friendly_name: "Sun is up"
        value_template: "{{ state_attr('sun.sun', 'elevation') | float > 4.0 }}"

homeassistant:
  customize:
    light.bureau:
      icon: 'mdi:desk'
    light.salon:
      icon: 'mdi:sofa'
    light.vitrine:
      icon: 'mdi:led-strip-variant'
    light.atelier:
      icon: 'mdi:tools'
    light.mezzanine:
      icon: 'mdi:bed-double'
    light.salle_de_bain_2:
      icon: 'mdi:shower'
    light.chambre:
      icon: 'mdi:bed-queen'
    light.cuisine:
      icon: 'mdi:pot-mix'
    light.spots_salon:
      icon: 'mdi:wallpaper'
    light.dressing_2:
      icon: 'mdi:hanger'
