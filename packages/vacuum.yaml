# Vacuum is a Rockrobo S50 flashed with Valetudo:
# https://github.com/Hypfer/Valetudo
# It doesn't have a config as it's auto generated via mqtt discovery

camera:
  # Vacuum map generated by https://github.com/Hypfer/ICantBelieveItsNotValetudo
  - platform: generic
    name: Vacuum Map
    still_image_url: http://icbinv:3030/api/map/image
    content_type: image/png
    framerate: 1

switch:
  - platform: template
    switches:
      # This switch is only used to control the vacuum via alexa
      aspirateur:
        friendly_name: "robot aspirateur"
        turn_on:
          service: vacuum.start
          entity_id: vacuum.rockrobo
        turn_off:
          service: vacuum.return_to_base
          entity_id: vacuum.rockrobo
        value_template: '{% if states.vacuum.rockrobo.state == "cleaning" %}
                            on
                         {% else %}
                            off
                         {% endif %}'
      # Mopping has to be launched manually once the mop has been installed on the vacuum underside
      mop:
        friendly_name: "robot serpilli√®re"
        turn_on:
          - service: vacuum.set_fan_speed
            entity_id: vacuum.rockrobo
            data:
              fan_speed: 'mop'
            entity_id: vacuum.rockrobo
          - service: vacuum.start
            entity_id: vacuum.rockrobo
        turn_off:
          - service: vacuum.set_fan_speed
            entity_id: vacuum.rockrobo
            data:
              fan_speed: 'min'
          - service: vacuum.return_to_base
            entity_id: vacuum.rockrobo
        value_template: '{% if states.vacuum.rockrobo.attributes.fan_speed == "mop" %}
                            on
                         {% else %}
                            off
                         {% endif %}'

sensor:
  # Sensor used for the automation below
  - platform: history_stats
    name: time spent vacuuming today
    entity_id: vacuum.rockrobo
    state: 'cleaning'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'

automation:
  - alias: Start clearning if home is empty
    trigger:
      - platform: state
        entity_id: group.people
        from: 'home'
        to: 'not_home'
        for:
          minutes: 2
    condition:
      - condition: time
        after: '09:00:00'
        before: '18:59:00'
      - condition: numeric_state
        entity_id: sensor.time_spent_vacuuming_today
        below: 0.33
      - condition: state
        entity_id: vacuum.rockrobo
        state: 'docked'
    action:
      - service: vacuum.set_fan_speed
        entity_id: vacuum.rockrobo
        data:
          fan_speed: 'max'
      - delay:
          seconds: 10
      - service: vacuum.start
        entity_id: vacuum.rockrobo
      - service: notify.mobile_app_phophone
        data_template:
          message: 'Started vacuum cleaning in your absence.'
          data:
            tag: 'vacuum-auto-started-cleaning'
      - delay:
          minutes: 40
      - service: vacuum.set_fan_speed
        entity_id: vacuum.rockrobo
        data:
          fan_speed: 'min'

  - alias: Quieten vacuum if back home alone
    trigger:
      - platform: state
        entity_id: device_tracker.phophone_2
        from: 'not_home'
        to: 'home'
    condition:
      - condition: state
        entity_id: vacuum.rockrobo
        state: 'cleaning'
    action:
      - service: vacuum.set_fan_speed
        entity_id: vacuum.rockrobo
        data:
          fan_speed: 'min'

  - alias: Stop vacuum if back home with guests
    trigger:
      - platform: state
        entity_id: group.guests
        from: 'not_home'
        to: 'home'
    condition:
      - condition: state
        entity_id: vacuum.rockrobo
        state: 'cleaning'
    action:
      - service: vacuum.return_to_base
        entity_id: vacuum.rockrobo

  - alias: Start clearning before it's too late
    trigger:
      - platform: time
        at: '19:00:00'
    condition:
      - condition: time
        weekday: [mon, tue, wed, thu, fri, sat]
      - condition: numeric_state
        entity_id: sensor.time_spent_vacuuming_today
        below: 0.33
      - condition: state
        entity_id: vacuum.rockrobo
        state: 'docked'
    action:
      - service: vacuum.set_fan_speed
        entity_id: vacuum.rockrobo
        data:
          fan_speed: 'min'
      - delay:
          seconds: 10
      - service: vacuum.start
        entity_id: vacuum.rockrobo

homeassistant:
  customize:
    switch.aspirateur:
      hidden: true
    switch.mop:
      icon: 'mdi:broom'
    sensor.time_spent_vacuuming_today:
      hidden: true
