automation:
  - alias: ðŸŒ¬ Prompt to open windows if exterior temperature is below inside temperature when it's warm
    trigger:
      - platform: template
        value_template: '{{ (states("sensor.netatmo_mezon_bureau_temperature") > states("sensor.netatmo_mezon_bureau_dehors_temperature")) and (states("sensor.netatmo_mezon_bureau_temperature") > states("sensor.netatmo_mezon_bureau_dehors_temperature")) }}'
    condition:
      - condition: state
        entity_id: group.people
        state: "home"
      - condition: numeric_state
        entity_id: sensor.netatmo_mezon_bureau_temperature
        above: 25
      - condition: time
        after: '14:00:00'
        before: '06:00:00'
      - condition: state
        entity_id: binary_sensor.windows_open
        state: 'off'
    action:
      service: notify.main_devices
      data_template:
        title: "ðŸªŸ"
        message: 'Open office window now! Indoor: {{ states("sensor.netatmo_mezon_bureau_temperature") }} - Outdoor: {{ states("sensor.netatmo_mezon_bureau_dehors_temperature") }}'
        data:
          tag: 'open-window-notification'

  - alias: ðŸŒ¬ Prompt to open windows for airing when exterior temperature is the highest during the day when it's cold
    trigger:
      - platform: template
        value_template: '{{ states("sensor.dark_sky_apparent_temperature") | float >= states("sensor.dark_sky_daytime_high_apparent_temperature_0d") | float - 0.5 }}'
    condition:
      - condition: state
        entity_id: group.people
        state: "home"
      - condition: numeric_state
        entity_id: sensor.netatmo_mezon_bureau_dehors_temperature
        below: 18
      - condition: state
        entity_id: binary_sensor.windows_open
        state: 'off'
      - condition: numeric_state
        entity_id: sensor.open_windows_time_today
        below: 0.10
    action:
      - service: notify.main_devices
        data_template:
          title: "ðŸªŸ"
          message: 'Open windows now for 10 minutes.'
          data:
            tag: 'open-window-notification'

  - alias: ðŸŒ¬ Prompt to close windows after airing when it's cold
    trigger:
      - platform: state
        entity_id: binary_sensor.windows_open
        to: 'on'
        for: '00:10:00'
    condition:
      - condition: state
        entity_id: group.people
        state: "home"
      - condition: numeric_state
        entity_id: sensor.netatmo_mezon_bureau_dehors_temperature
        below: 18
    action:
      - service: notify.main_devices
        data_template:
          title: "ðŸªŸ"
          message: 'Close windows now.'
          data:
            tag: 'close-window-notification'

  - alias: ðŸŒ¬ Turn stuff off when a window is opened
    trigger:
      - platform: state
        entity_id: binary_sensor.windows_open
        to: 'on'
    action:
      - service: notify.main_devices
        data:
          message: 'clear_notification'
          data:
            tag: 'open-window-notification'
      - service: climate.turn_off
        entity_id: climate.netatmo_my_room
      - service: fan.turn_off
        entity_id:
          - fan.xiaomi_air_purifier_2_2
          - fan.xiaomi_air_purifier_2s_2
      - service: humidifier.turn_off
        entity_id:
          - humidifier.zhimi_humidifier_cb1

  - alias: ðŸŒ¬ Turn stuff back on when the windows are closed
    trigger:
      - platform: state
        entity_id: binary_sensor.windows_open
        to: 'off'
    action:
      - service: notify.main_devices
        data:
          message: 'clear_notification'
          data:
            tag: 'close-window-notification'
      - service: climate.turn_on
        entity_id: climate.netatmo_my_room
      - service: climate.set_preset_mode
        entity_id: climate.netatmo_my_room
        data:
          preset_mode: "Schedule"
      - service: fan.turn_on
        entity_id:
          - fan.xiaomi_air_purifier_2_2
          - fan.xiaomi_air_purifier_2s_2
      - service: humidifier.turn_on
        entity_id:
          - humidifier.zhimi_humidifier_cb1

sensor:
#  - platform: template
#    sensors:
#      today_max_temp:
#        friendly_name: "Today maximum temperature"
#        unit_of_measurement: 'degrees'
#        value_template: "{{ state_attr('weather.paris_11eme_arrondissement', 'forecast')[0].temperature }}"
  - platform: history_stats
    name: open windows time today
    entity_id: binary_sensor.windows_open
    state: 'on'
    type: time
    start: '{{ now().replace(hour=0).replace(minute=0).replace(second=0) }}'
    end: '{{ now() }}'
