plant:
  flowall_bureau:
    sensors:
      moisture: sensor.plant_1_soil_moisture
      battery: sensor.plant_1_battery
      temperature: sensor.plant_1_temperature
    min_moisture: 33
    max_moisture: 80
    min_battery: 20
    min_temperature: 15
  flowall_salon:
    sensors:
      moisture: sensor.plant_2_soil_moisture
      battery: sensor.plant_2_battery
      temperature: sensor.plant_2_temperature
    min_moisture: 33
    max_moisture: 80
    min_battery: 20
    min_temperature: 15

homeassistant:
  customize:
    plant.flowall_bureau:
      friendly_name: Plantes murales bureau
    plant.flowall_salon:
      friendly_name: Plantes murales salon

automation:
  - alias: ðŸŒ¿ Switch grow lights on during the night
    trigger:
      - platform: state
        entity_id: group.main_rooms_lights
        to: 'off'
        for: '01:00:00'
    condition:
      - condition: state
        entity_id: binary_sensor.sun_up
        state: 'off'
      - condition: state
        entity_id: binary_sensor.door_2_contact
        state: 'off'
      - condition: state
        entity_id: group.guests
        state: 'not_home'
    action:
      - service: switch.turn_off
        entity_id: switch.adaptive_lighting_global
      - service: light.turn_on
        entity_id: group.main_rooms_lights
        data:
          color_name: fuchsia
          brightness: 255
          transition: 60
      - delay: '04:00:00'
      - condition: state  # if it's back on, it's been reactived elsewhere, stop sequence
        entity_id: switch.adaptive_lighting_global
        state: 'off'
      - service: switch.turn_on
        entity_id: switch.adaptive_lighting_global
      - delay:
          seconds: 10
      - service: light.turn_off
        entity_id: group.main_rooms_lights

  - alias: ðŸŒ¿ Switch grow Lights off at sunrise or wakeup
    trigger:
      - platform: sun
        event: sunrise
      - platform: state
        entity_id: input_boolean.night_time
        to: 'off'
    condition:
      condition: state
      entity_id: switch.adaptive_lighting_global
      state: 'off'
    action:
      - service: switch.turn_on
        entity_id: switch.adaptive_lighting_global
      - delay:
          seconds: 10
      - service: light.turn_off
        entity_id: group.main_rooms_lights

  - alias: ðŸŒ¿ Send notification when plant needs attention
    trigger:
      - platform: state
        entity_id:
          - plant.flowall_bureau
          - plant.flowall_salon
        to: problem
    action:
      - service: notify.main_devices
        data_template:
          title: "ðŸŒ¿ {{ state_attr(trigger.entity_id, 'friendly_name') }}"
          message: "{{ state_attr(trigger.entity_id, 'friendly_name') }} needs help ({{ state_attr(trigger.entity_id, 'problem') }})"
          data:
            tag: "plant-watering"

  - alias: ðŸŒ¿ clear notification when plants have been watered
    trigger:
      - platform: state
        entity_id:
          - plant.flowall_bureau
          - plant.flowall_salon
        to: ok
    action:
      - service: notify.main_devices
        data:
          message: "clear_notification"
          data:
            tag: "plant-watering"
